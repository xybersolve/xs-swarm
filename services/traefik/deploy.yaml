version: "3.3"

networks:
  traefik-net:
    external: true

configs:
  traefik.toml:
    file: ./configs/traefik.toml

services:
  traefik:
    image: traefik:latest
    command: --web \
      --docker \
      --docker.swarmmode \
      --docker.domain=docker.localhost \
      --docker.watch \
      --api \
      --logLevel=DEBUG
    networks:
      - traefik-net
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock \
      - ./traefik.toml:/traefik.toml \
      #- ./acme.json:/acme.json
      #- /dev/null:/traefik.toml
    deploy:
      placement:
        constraints: [node.role==manager]



  # traefik:
  #   image: devmtl/traefikfire:1.4.5A
  #   ports:
  #   - target: 80
  #     protocol: tcp
  #     published: 80
  #     mode: ingress
  #   - target: 8080
  #     protocol: tcp
  #     published: 8080
  #     mode: ingress
  #   networks:
  #     - ntw_front
  #   configs:
  #     - source: traefik.toml
  #       target: /etc/traefik/traefik.toml
  #   command: --docker \
  #     --docker.swarmmode \
  #     --docker.domain=traefik \
  #     --docker.endpoint=tcp://socat:2375 \
  #     --docker.watch \
  #     --debug=true \
  #     --logLevel=WARN \
  #     --web \
  #     --web.metrics.prometheus \
  #     --web.metrics.prometheus.buckets="0.1,0.3,1.2,5.0" \
  #     --web.address=:8080
  #   deploy:
  #     mode: replicated
  #     replicas: 1
  #     update_config:
  #       delay: 2s
  #     placement:
  #       constraints: [node.role==manager]
  #     restart_policy:
  #       condition: on-failure
  #       max_attempts: 5
  #     resources:
  #       limits:
  #         cpus: '0.33'
  #         memory: 128M
  #       reservations:
  #         cpus: '0.05'
  #         memory: 64M

#   docker service create \
#     --name traefik \
#     --constraint=node.role==manager \
#     --publish 80:80 \
#     --publish 8080:8080 \
#     --mount type=bind,source=/var/run/docker.sock,target=/var/run/docker.sock \
#     --network "${TRAEFIK_NETWORK}" \
#     traefik:latest \
#       --docker \
#       --docker.swarmMode \
#       --docker.domain=traefik \
#       --docker.watch \
#       --api
